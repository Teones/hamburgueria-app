// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id            Int           @id @default(autoincrement())
  name          String        
  email         String        @unique
  password      String
  // address       Address[]
  orders        Orders[]

  @@map("users")
}

// model Address {
//   id              Int           @id @default(autoincrement())
//   title           String        @unique
//   cep             String
//   road            String
//   number          Int
//   complement      String        //pode ser null
//   district        String
//   city            String
//   state           String
//   referencePoint  String
//   users           Users         @relation(fields: [userId], references: [id])
//   userId          Int
//   orders          Orders[]

//   @@map("address")
// }

// model Coupons {
//   id            Int           @id @default(autoincrement())
//   code          String
//   orders        Orders[]

//   @@map("coupons")
// }

// model Cards {
//   id                Int         @id @default(autoincrement())
//   title             String
//   number            String
//   cardHolderName    String
//   securityCode      String
//   exprirationData   String
//   type              String
//   orders            Orders[]

//   @@map("cards")
// }

model Menu {
  id                Int         @id @default(autoincrement())
  name              String
  image             String
  price             String
  description       String
  category          String
  subCategory       String
  controlOfOrders   ControlOfOrders[]

  @@map("menu")
}

model ControlOfOrders {
  id                 Int          @id @default(autoincrement())
  menu               Menu         @relation(fields: [menuId], references: [id])
  menuId             Int                   
  quantity           Int
  orders             Orders       @relation(fields: [ordersId], references: [id])
  ordersId           Int

  @@map("controlOfOrders")
}

model Orders {
  id                  Int           @id @default(autoincrement())
  code                String        @unique
  status              String
  users               Users         @relation(fields: [userId], references: [id])
  userId              Int
  // address             Address       @relation(fields: [addressId], references: [id])
  // addressId           Int
  // haveCoupon          Boolean
  // coupons             Coupons       @relation(fields: [couponId], references: [id])
  // couponId            Int
  // cardPayment         Boolean
  // cards               Cards         @relation(fields: [cardsId], references: [id])
  // cardsId             Int      
  total               String
  // createdAt           DateTime      @default(now())
  controlOfOrders     ControlOfOrders[]

  @@map("orders")
}